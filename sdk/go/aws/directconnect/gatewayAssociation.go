// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Associates a Direct Connect Gateway with a VGW. For creating cross-account association proposals, see the [`aws_dx_gateway_association_proposal` resource](https://www.terraform.io/docs/providers/aws/r/dx_gateway_association_proposal.html).
type GatewayAssociation struct {
	s *pulumi.ResourceState
}

// NewGatewayAssociation registers a new resource with the given unique name, arguments, and options.
func NewGatewayAssociation(ctx *pulumi.Context,
	name string, args *GatewayAssociationArgs, opts ...pulumi.ResourceOpt) (*GatewayAssociation, error) {
	if args == nil || args.DxGatewayId == nil {
		return nil, errors.New("missing required argument 'DxGatewayId'")
	}
	if args == nil || args.VpnGatewayId == nil {
		return nil, errors.New("missing required argument 'VpnGatewayId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["allowedPrefixes"] = nil
		inputs["dxGatewayId"] = nil
		inputs["vpnGatewayId"] = nil
	} else {
		inputs["allowedPrefixes"] = args.AllowedPrefixes
		inputs["dxGatewayId"] = args.DxGatewayId
		inputs["vpnGatewayId"] = args.VpnGatewayId
	}
	inputs["dxGatewayAssociationId"] = nil
	s, err := ctx.RegisterResource("aws:directconnect/gatewayAssociation:GatewayAssociation", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GatewayAssociation{s: s}, nil
}

// GetGatewayAssociation gets an existing GatewayAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayAssociation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GatewayAssociationState, opts ...pulumi.ResourceOpt) (*GatewayAssociation, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["allowedPrefixes"] = state.AllowedPrefixes
		inputs["dxGatewayAssociationId"] = state.DxGatewayAssociationId
		inputs["dxGatewayId"] = state.DxGatewayId
		inputs["vpnGatewayId"] = state.VpnGatewayId
	}
	s, err := ctx.ReadResource("aws:directconnect/gatewayAssociation:GatewayAssociation", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GatewayAssociation{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *GatewayAssociation) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *GatewayAssociation) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
func (r *GatewayAssociation) AllowedPrefixes() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["allowedPrefixes"])
}

// The ID of the Direct Connect gateway association.
func (r *GatewayAssociation) DxGatewayAssociationId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["dxGatewayAssociationId"])
}

// The ID of the Direct Connect gateway.
func (r *GatewayAssociation) DxGatewayId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["dxGatewayId"])
}

// The ID of the VGW with which to associate the gateway.
func (r *GatewayAssociation) VpnGatewayId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpnGatewayId"])
}

// Input properties used for looking up and filtering GatewayAssociation resources.
type GatewayAssociationState struct {
	// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
	AllowedPrefixes interface{}
	// The ID of the Direct Connect gateway association.
	DxGatewayAssociationId interface{}
	// The ID of the Direct Connect gateway.
	DxGatewayId interface{}
	// The ID of the VGW with which to associate the gateway.
	VpnGatewayId interface{}
}

// The set of arguments for constructing a GatewayAssociation resource.
type GatewayAssociationArgs struct {
	// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
	AllowedPrefixes interface{}
	// The ID of the Direct Connect gateway.
	DxGatewayId interface{}
	// The ID of the VGW with which to associate the gateway.
	VpnGatewayId interface{}
}
